[gd_scene load_steps=9 format=2]

[ext_resource path="res://assets/materials/entity/camera.tres" type="Material" id=2]
[ext_resource path="res://assets/model/camera.mesh" type="ArrayMesh" id=3]
[ext_resource path="res://assets/materials/gui/gui_options.tres" type="Material" id=4]
[ext_resource path="res://source/scenes/gui/gui_popup_options.tscn" type="PackedScene" id=5]

[sub_resource type="PlaneMesh" id=1]

[sub_resource type="Shader" id=2]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.2.stable's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx,unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	albedo_tex.rgb = mix(pow((albedo_tex.rgb + vec3(0.055)) * (1.0 / (1.0 + 0.055)),vec3(2.4)),albedo_tex.rgb.rgb * (1.0 / 12.92),lessThan(albedo_tex.rgb,vec3(0.04045)));
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
	ALPHA = albedo.a * albedo_tex.a;
}
"

[sub_resource type="ViewportTexture" id=3]
viewport_path = NodePath("MeshInstance2/Viewport")

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 2 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = SubResource( 3 )

[node name="Camera" type="MeshInstance"]
transform = Transform( -4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0, 0, 0 )
mesh = ExtResource( 3 )
material/0 = ExtResource( 2 )

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 2.00373e-07, 1, 6.41552e-15, -3.47873e-08, 9.9516e-16, 0.874413, 1.5712, -1.34842e-07, 7.546e-08, -0.847072, -0.198966, -0.402634 )
mesh = SubResource( 1 )
material/0 = ExtResource( 4 )

[node name="Viewport" type="Viewport" parent="MeshInstance"]
size = Vector2( 1920, 1080 )
transparent_bg = true
debanding = true

[node name="GuiOptions" parent="MeshInstance/Viewport" instance=ExtResource( 5 )]

[node name="MeshInstance2" type="MeshInstance" parent="."]
transform = Transform( 2.55518e-07, 1, 9.06397e-15, -8.31789e-09, 2.3795e-16, 0.209078, 0.309627, 8.52488e-09, 1.48705e-08, -0.921252, 1.4321, -0.406464 )
mesh = SubResource( 1 )
material/0 = SubResource( 4 )

[node name="Viewport" type="Viewport" parent="MeshInstance2"]
size = Vector2( 1920, 1080 )
debanding = true

[node name="Camera" type="Camera" parent="MeshInstance2/Viewport"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.404508, 0, -2.49613 )
